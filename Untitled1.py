#!/usr/bin/env python
# coding: utf-8

# In[1]:


# Напишите программу, вычисляющую площадь треугольника по переданным длинам трёх его сторон по формуле Герона.
a, b, c = int(input()), int(input()), int(input())
p = (a + b + c)/2
S = (p*(p-a)*(p-b)*(p-c)) **0.5
print (S)

# Напишите программу, принимающую на вход целое число, которая выводит True, 
# если переданное значение попадает в интервал (-15, 12] \cup (14, 17) \cup [19, +\infty)(−15,12]∪(14,17)∪[19,+∞) 
# и False в противном случае (регистр символов имеет значение).

a = int(input())
if (-15< a <= 12) or (14 < a < 17) or (a >=19):
    print('True')
else:
    print('False')
    
# Напишите простой калькулятор, который считывает с пользовательского ввода три строки: 
# первое число, второе число и операцию, после чего применяет операцию к введённым числам
# и выводит результат на экран.

a = float(input())
b = float(input())
c = str(input())
if c == '+':
    print (a+b)
elif c == '-':
    print (a-b)
elif c == '*':
    print (a*b)
elif c == 'mod':
    if b != 0:
        print (a%b)
    else:
        print ('Деление на 0!')
elif c == 'pow':
    print (a**b)
elif c == 'div':
    if b != 0:
        print (a//b)
    else:
        print ('Деление на 0!')
elif c == '/':
    if b != 0:
        print (a/b)
    else:
        print ('Деление на 0!')
        
# Требуется написать программу, на вход которой подаётся тип фигуры комнаты 
# и соответствующие параметры, которая бы выводила площадь получившейся комнаты.
# Для числа π использовать значение 3.14.

z = str(input())
if z == 'треугольник':
    a = float(input())
    b = float(input())
    c = float(input())
    print((((a+b+c)/2)* (((a+b+c)/2)-a)*(((a+b+c)/2)-b)*(((a+b+c)/2)-c))**0.5)
elif z == 'прямоугольник':
    a = float(input())
    b = float(input())
    print (a*b)
elif z == 'круг':
    r = float(input())
    print (3.14*r**2)

# Напишите программу, которая получает на вход три целых числа, по одному числу в строке, 
# и выводит на консоль в три строки сначала максимальное, потом минимальное, после чего оставшееся число.

a, b, c = int(input()), int(input()), int(input())
print (max(a,b,c),'\n',min(a,b,c),'\n',((a+b+c)-max(a,b,c)-min(a,b,c)))

# Напишите программу, считывающую с пользовательского ввода целое число nn (неотрицательное), 
# выводящее это число в консоль вместе с правильным образом изменённым словом "программист", 
# для того, чтобы робот мог нормально общаться с людьми, например: 1 программист, 2 программиста, 5 программистов.

n = int(input())
a = 'программи'
if n % 100 // 10 == 1:
    z = str('стов')
elif n % 10 in (0, 5, 6, 7, 8, 9):
    z = str('стов')
elif n % 10 ==1:
    z = str('ст')
elif n % 10 in (2, 3, 4):
    z = str('ста')
print (n, a+z)

# Билет считается счастливым, если сумма первых трех цифр совпадает с суммой последних трех цифр номера билета.
# Написать программу, которая проверит равенство сумм и 
# выведет "Счастливый", если суммы совпадают, и "Обычный", если суммы различны.

a = input()
if int(a[0])+int(a[1])+int(a[2]) == int(a[3])+int(a[4])+int(a[5]):
    print("Счастливый")
else:
    print("Обычный")
    
# Требуется определить, является ли данный год високосным.

a = int(input())
if (a%4 == 0) and (a%100 != 0) or (a%400 == 0):
    print('Високосный')
else: 
    print('Обычный')
    
# Напишите программу, которая считывает с клавиатуры два числа a и b, 
# считает и выводит на консоль среднее арифметическое всех чисел из отрезка [a; b][a;b], которые кратны числу 3.

a,b = int(input()), int(input())
s = 0
n = 0
if a%3 != 0:
    a+=1
    if a%3 !=0:
        a+=1
for i in range (a,b + 1, 3):
    n=n+1
    s+=i
print (s/n)

# Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты группы информатиков 
# предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.
# Кодирование осуществляется следующим образом:
# s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот символ и 
# количество его повторений в этой позиции строки.

s = input()
cnt = 0 
shifr = ''
for i in range(len(s)):
    sim = s[i]
    cnt += 1
    if i == len(s) - 1: 
        shifr = shifr + s[i] + str(cnt)
        break
    if s[i] != s[i+1]:
        shifr = shifr + s[i] + str(cnt)
        cnt = 0
print (shifr)


# In[ ]:




